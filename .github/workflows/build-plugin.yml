name: "Build VCV Rack Plugin"

on:
  push:
    branches:
      - "master"
      - "*test"
    tags:
      - v*
  pull_request:
    branches:
      - "master"

env:
  rack-sdk-version: 2.3.0

defaults:
  run:
    shell: bash

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
            name: Linux,
            arch: lin-x64,
            os: ubuntu-latest,
            prepare-os: sudo apt-get update && sudo apt install -y libglu-dev
          }
        - {
            name: MacOS-arm64,
            arch: mac-x64,
            os: macos-latest,
            prepare-os: "export CROSS_COMPILE=x86_64-apple-darwin"
          }
          {
            name: MacOS-x64,
            arch: mac-arm64,
            os: macos-latest,
            prepare-os: "export CROSS_COMPILE=arm64-apple-darwin"
          }
        - {
            name: Windows,
            arch: win-x64,
            os: windows-latest,
            prepare-os: export CC=gcc
          }
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Get Rack-SDK
        run: |
          pushd $HOME
          curl -o Rack-SDK.zip https://vcvrack.com/downloads/Rack-SDK-${{ env.rack-sdk-version }}-${{ matrix.config.arch }}.zip
          unzip Rack-SDK.zip
      - name: Patch plugin.mk, use 7zip on Windows
        if: runner.os == 'Windows'
        run: |
          sed -i 's/zip -q -9 -r/7z a -tzip -mx=9/' $HOME/Rack-SDK/plugin.mk
      - name: Modify plugin version
        # only modify plugin version if no tag was created
        if: "! startsWith(github.ref, 'refs/tags/v')"
        run: |
          gitrev=`git rev-parse --short HEAD`
          pluginversion=`jq -r '.version' plugin.json`
          echo "Set plugin version from $pluginversion to $pluginversion-test because no TAG was created (${{github.ref}})"
          cat <<< `jq --arg VERSION "$pluginversion-test" '.version=$VERSION' plugin.json` > plugin.json
      - name: Build plugin
        run: |
          ${{ matrix.config.prepare-os }}
          export RACK_DIR=$HOME/Rack-SDK
          make -j dep
          make -j dist
      - name: Upload artifact 
        uses: actions/upload-artifact@v2
        with:
          path: dist/**/*.vcvplugin
          name: ${{ matrix.config.name }}
          
  pre-release:
    name: "Pre Release"
    # only create a dev release if no tag was created
    if: "! startsWith(github.ref, 'refs/tags/v')"
    runs-on: "ubuntu-latest"
    needs: build

    steps:
      - uses: actions/download-artifact@v3
        with:
          path: _artifacts
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Latest Development Build"
          files: |
            _artifacts/**/*.vcvplugin

  release:
    name: "Release"
    # only create a release if a tag was created e.g. v1.2.3
    if: "startsWith(github.ref, 'refs/tags/v')"
    runs-on: "ubuntu-latest"
    needs: build

    steps:
      - uses: actions/download-artifact@v3
        with:
          path: _artifacts
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            _artifacts/**/*.vcvplugin